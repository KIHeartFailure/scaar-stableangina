```{r}
#| label: outcomesfunc
#| cache: true
#| cache.comments: false

coxvars <- modvars
coxvars[modvars %in% stratavars] <- paste0("strata(", coxvars[modvars %in% stratavars], ")")

outcomesfunc_inner <- function(data, time, event, eventname, xvar = "case",
                               fg = T, novar = NULL, timedata) {
  levs <- levels(data %>% pull(!!sym(xvar)))
  nlevs <- length(levs)

  nrows <- if_else(fg, 6, 4)
  out <- data.frame(matrix(NA, ncol = 2 + nlevs, nrow = nrows))
  colnames(out) <- c("Outcome", "Model", levs)

  out[1, 1] <- eventname

  ## incidence rate
  out[1, 2] <- "No events, sum py, incidence/1000py (95% CI)"

  # 1 row - incidence
  ev <- data %>%
    group_by(!!sym(xvar)) %>%
    summarise(
      ev = sum(!!sym(event) == "Yes"),
      s = sum(!!sym(time) / 365.25),
      .groups = "drop"
    )
  r <- pois.exact(x = ev$ev, pt = ev$s / 1000)

  out[1, 3:(nlevs + 2)] <- paste0(
    ev$ev, ", ",
    fn(ev$s, dig = 0), ", ",
    fn(r$rate, dig = 0), " (",
    fn(r$lower, dig = 0), "-",
    fn(r$upper, dig = 0), ")"
  )

  ## 2 row - crude regression
  out[2, 2] <- "Crude Hazard Ratio (95% CI), p-value"
  mod <- summary(coxph(formula(paste0("Surv(", time, ",", event, "== 'Yes') ~ ", xvar, " + frailty(lopnrcase)")),
    data = data
  ))

  out[2, 3:4] <- c(
    "reference",
    paste0(
      fn(mod$conf.int[1, "exp(coef)"], dig = 2),
      " (", fn(mod$conf.int[1, "lower .95"], dig = 2),
      "-", fn(mod$conf.int[1, "upper .95"], dig = 2), "), ",
      fn(mod$coef[1, "p"], dig = 3, p = TRUE)
    )
  )

  ## 3 row - adjusted regression
  out[3, 2] <- "Adjusted Hazard Ratio (95% CI), p-value"
  coxvars2 <- setdiff(coxvars, novar)
  mod <- summary(coxph(formula(paste0("Surv(", time, ",", event, "== 'Yes') ~ ", xvar, "+", paste(coxvars2, collapse = " + "), "+ frailty(lopnrcase)")),
    data = data
  ))

  out[3, 3:4] <- c(
    "reference",
    paste0(
      fn(mod$conf.int[1, "exp(coef)"], dig = 2),
      " (", fn(mod$conf.int[1, "lower .95"], dig = 2),
      "-", fn(mod$conf.int[1, "upper .95"], dig = 2), "), ",
      fn(mod$coef[1, "p"], dig = 3, p = TRUE)
    )
  )

  ## 4 row - adjusted regression w timedependent meds
  out[4, 2] <- "Adjusted with timedependent covariates Hazard Ratio (95% CI), p-value"
  mod <- summary(coxph(formula(paste0("Surv(starttime, stoptime, event == 'Yes') ~ ", xvar, "+", paste(coxvars2, collapse = " + "), "+ frailty(lopnrcase)")),
    data = timedata
  ))

  out[4, 3:4] <- c(
    "reference",
    paste0(
      fn(mod$conf.int[1, "exp(coef)"], dig = 2),
      " (", fn(mod$conf.int[1, "lower .95"], dig = 2),
      "-", fn(mod$conf.int[1, "upper .95"], dig = 2), "), ",
      fn(mod$coef[1, "p"], dig = 3, p = TRUE)
    )
  )

  if (fg) {
    out[5, 2] <- "Crude Sub-distributional Hazard Ratio (95% CI), p-value"
    mod <- summary(coxph(formula(paste0("Surv(fgstart, fgstop, fgstatus) ~ ", xvar, " + cluster(lopnrcase)")),
      weight = fgwt, data = sdatafg_comp # ok since only main model and only main outcome
    ))

    out[5, 3:4] <- c(
      "reference",
      paste0(
        fn(mod$conf.int[1, "exp(coef)"], dig = 2),
        " (", fn(mod$conf.int[1, "lower .95"], dig = 2),
        "-", fn(mod$conf.int[1, "upper .95"], dig = 2), "), ",
        fn(mod$coef[1, "Pr(>|z|)"], dig = 3, p = TRUE)
      )
    )

    out[6, 2] <- "Adjusted Sub-distributional Hazard Ratio (95% CI), p-value"
    mod <- summary(coxph(
      formula(paste0(
        "Surv(fgstart, fgstop, fgstatus) ~ ", xvar, "+",
        paste(coxvars2, collapse = " + "), "+ cluster(lopnrcase)"
      )),
      weight = fgwt, data = sdatafg_comp # ok since only main model and only main outcome
    ))

    out[6, 3:4] <- c(
      "reference",
      paste0(
        fn(mod$conf.int[1, "exp(coef)"], dig = 2),
        " (", fn(mod$conf.int[1, "lower .95"], dig = 2),
        "-", fn(mod$conf.int[1, "upper .95"], dig = 2), "), ",
        fn(mod$coef[1, "Pr(>|z|)"], dig = 3, p = TRUE)
      )
    )
  }
  return(out)
}

outcomesfunc <- function(var, val, novar = NULL, fgall = F) {
  if (is.null(var)) {
    data <- sdata
    timedata_comp <- medtimedata_comp
    timedata_death <- medtimedata_death
    timedata_deathcv <- medtimedata_deathcv
    timedata_hosphf <- medtimedata_hosphf
    timedata_hospmi <- medtimedata_hospmi
    timedata_hospstroke <- medtimedata_hospstroke
    timedata_revasc <- medtimedata_revasc
  } else {
    data <- sdata %>% filter(!!sym(var) %in% c(val))
    timedata_comp <- medtimedata_comp %>% filter(!!sym(var) %in% c(val))
    timedata_death <- medtimedata_death %>% filter(!!sym(var) %in% c(val))
    timedata_deathcv <- medtimedata_deathcv %>% filter(!!sym(var) %in% c(val))
    timedata_hosphf <- medtimedata_hosphf %>% filter(!!sym(var) %in% c(val))
    timedata_hospmi <- medtimedata_hospmi %>% filter(!!sym(var) %in% c(val))
    timedata_hospstroke <- medtimedata_hospstroke %>% filter(!!sym(var) %in% c(val))
    timedata_revasc <- medtimedata_revasc %>% filter(!!sym(var) %in% c(val))
  }
  out1 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[1],
    event = outvars$var[1],
    eventname = outvars$name[1],
    fg = fgall,
    novar = novar,
    timedata = timedata_comp
  )
  out2 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[2],
    event = outvars$var[2],
    eventname = outvars$name[2],
    novar = novar,
    fg = F,
    timedata = timedata_deathcv
  )
  out3 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[3],
    event = outvars$var[3],
    eventname = outvars$name[3],
    novar = novar,
    fg = F,
    timedata = timedata_hosphf
  )
  out4 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[4],
    event = outvars$var[4],
    eventname = outvars$name[4],
    novar = novar,
    fg = F,
    timedata = timedata_hospmi
  )
  nr <- 5
  out5 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[nr],
    event = outvars$var[nr],
    eventname = outvars$name[nr],
    novar = novar,
    fg = F,
    timedata = timedata_hospstroke
  )
  nr <- 6
  out6 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[nr],
    event = outvars$var[nr],
    eventname = outvars$name[nr],
    novar = novar,
    fg = F,
    timedata = timedata_revasc
  )
  nr <- 7
  out7 <- outcomesfunc_inner(
    data = data,
    time = outvars$time[nr],
    event = outvars$var[nr],
    eventname = outvars$name[nr],
    novar = novar,
    fg = F,
    timedata = timedata_death
  )
  outall <- rbind(out1, out2, out3, out4, out5, out6, out7)

  make_one_xlsxsheet(outall)

  default_kable(outall) %>%
    footnote(
      general_title = "",
      general = "Abbreviations: py: person-years; CI: Confidence interval"
    ) %>%
    column_spec(1, width = "6cm")
}
```

```{r}
#| label: tbl-outcomes
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control"
#| tbl-pos: "H"

outcomesfunc(var = NULL, fgall = T)
```

```{r}
#| label: tbl-outcomes-male
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control - Male"
#| tbl-pos: "H"

outcomesfunc(var = "scb_sex", val = "Male", fgall = F)
```

```{r}
#| label: tbl-outcomes-female
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control - Female"
#| tbl-pos: "H"

outcomesfunc(var = "scb_sex", val = "Female", fgall = F)
```

```{r}
#| label: tbl-outcomes-age_65
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control - Age < 65"
#| tbl-pos: "H"

outcomesfunc(var = "scb_age_cat", val = "<65", fgall = F)
```

```{r}
#| label: tbl-outcomes-age_6580
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control - Age 65-80"
#| tbl-pos: "H"

outcomesfunc(var = "scb_age_cat", val = "65-80", fgall = F)
```

```{r}
#| label: tbl-outcomes-age_80
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control - Age > 80"
#| tbl-pos: "H"

outcomesfunc(var = "scb_age_cat", val = ">80", fgall = F)
```

```{r}
#| label: tbl-outcomes-yearexc20062010
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and case/control - Year of inclusion 2011-2019 (excluding 2006-2010, sensitivity analysis)"
#| tbl-pos: "H"

outcomesfunc(var = "year_cat", val = c("2011-2015", "2016-2019"), fgall = F)
```
